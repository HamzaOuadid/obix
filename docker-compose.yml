version: '3.8'

services:
  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: always

  backend:
    build:
      context: ./obix-chatbot-backend
      dockerfile: Dockerfile
    volumes:
      - ./obix-chatbot-backend:/app
      - static_volume:/app/staticfiles
    env_file:
      - ./.env
    depends_on:
      - db
    restart: always

  frontend:
    build:
      context: ./obix-chatbot
      dockerfile: Dockerfile
    volumes:
      - ./obix-chatbot:/app
      - frontend_build:/app/dist
    env_file:
      - ./.env
    depends_on:
      - backend
    restart: always

  nginx:
    image: nginx:1.23
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
      - static_volume:/var/www/staticfiles
      - frontend_build:/var/www/frontend
    depends_on:
      - backend
      - frontend
    restart: always

  certbot:
    image: certbot/certbot
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  postgres_data:
  static_volume:
  frontend_build: 